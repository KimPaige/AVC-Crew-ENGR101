/*SKELETON CODES FOR AVC */
/*  A.Roberts, 5 Apr 2016*/
#include <stdio.h>

//#include <pthread.h>
#include <time.h>
#include <string.h>

// sudo gcc -Wall
extern "C" int init_hardware();
extern "C" int init(int d_lev);

extern "C" int take_picture();
extern "C" char get_pixel(int row, int col, int color);
extern "C" void set_pixel(int col, int row, char red,char green,char blue);

extern "C" int open_screen_stream();
extern "C" int close_screen_stream();
extern "C" int update_screen();
//extern "C" void GetLine(int row,int threshold);
extern "C" int display_picture(int delay_sec,int delay_usec);
extern "C" int save_picture(char filename[5]);

extern "C" int set_motor(int motor,int speed);

extern "C" int read_analog(int ch_adc);
extern "C" int Sleep(int sec, int usec);
extern "C" int select_IO(int chan, int direct);
extern "C" int write_digital(int chan,char level);
extern "C" int read_digital(int chan);
extern "C" int set_PWM(int chan, int value);

extern "C" int connect_to_server( char server_addr[15],int port);
extern "C" int send_to_server(char message[24]);
extern "C" int receive_from_server(char message[24]);


int v_left = 0;
int v_right = 0;

int main(){
    int n_ones = 0;
    int i;
    init(1);
    // connect camera to the screen
    open_screen_stream();
    set_motor(1,60);
    set_motor(2,60);
    Sleep(2,0);
    set_motor(1,0);
    set_motor(2,0);
  
    int whit_thr[320];
    int np = 320;
    int a[320];
    
connect_to_server("130.195.6.196",1024);
send_to_server("Please");
char message[24];
recieve_from_server(message);
send_to_server(message);

    while(1) {
//        printf("**** 1 **np=%d********\n",npp);
       take_picture();      // take camera shot
       // int a[160];

       for(i=-160; i<np; i++){
          a[i] = i-160;
                }
     int x;
     n_ones = 0;
//     printf("*****2****np=%d\n",npp);
     for ( i=0; i < np; i++) {
        x = get_pixel(i,120,3);

        if(x>128){
           whit_thr[i]=1;
           n_ones++;
          }
          else{
            whit_thr[i] = 0;
          }
//          printf("%d ",whit_thr[i]);
       }
//       printf("\n");
     int e = 0;
     for(i=0; i<np; i++){
        e += whit_thr[i]*a[i];
     }
           //}//if statement for the number of ones
       float p_constant = 0.002;
       v_left = 40 - (int)(e*p_constant);
       v_right = 40 + (int)(e*p_constant);
//       printf("n_ones =%d v_left=%d v_right=%d\n",n_ones,v_left,v_right);
       if(n_ones==0){
//          printf("going back\n");
          set_motor(1,50);
          set_motor(2,-30);
          Sleep(0,100000);
       }

       set_motor(2,v_right);
       set_motor(1,v_left);

       // display picture
       update_screen();

       // check motors

     }
        // terminate hardware
    close_screen_stream();
    set_motor(1,0);
    set_motor(2,0);

    return 0;


}
